/**
 * @moduli/types - Core type definitions for Moduli
 *
 * This package provides all TypeScript interfaces, types, and Zod schemas
 * used throughout the Moduli monorepo.
 */
export {
  type ConceptId,
  type NodeMetadata,
  type Concept,
  RelationType,
  type ConceptRelation,
  type Collection,
  type LearningPath,
  NodeMetadataSchema,
  ConceptSchema,
  RelationTypeSchema,
  ConceptRelationSchema,
  CollectionSchema,
  LearningPathSchema,
  isConcept,
  isConceptRelation,
  isCollection,
  isLearningPath,
} from "./graph.js";
export {
  UserRole,
  type User,
  type UserPreferences,
  type School,
  type UserProgress,
  type LearningSession,
  type Permission,
  DEFAULT_PERMISSIONS,
  UserRoleSchema,
  UserPreferencesSchema,
  UserSchema,
  SchoolSchema,
  UserProgressSchema,
  isUser,
  isSchool,
  hasPermission,
} from "./user.js";
export {
  type ConceptFrontmatter,
  type RelationDefinition,
  type ParsedConcept,
  type Heading,
  type CodeBlock,
  type CollectionDefinition,
  type CollectionMember,
  type ViewConfig,
  type SectionConfig,
  type NavigationConfig,
  type NavItem,
  type ThemeConfig,
  RelationDefinitionSchema,
  ConceptFrontmatterSchema,
  HeadingSchema,
  CodeBlockSchema,
  ParsedConceptSchema,
  CollectionMemberSchema,
  CollectionDefinitionSchema,
  isConceptFrontmatter,
  isParsedConcept,
  isCollectionMember,
} from "./content.js";
export {
  type DeepPartial,
  type DeepRequired,
  type ArrayElement,
  type RequireKeys,
  type PartialKeys,
  type ApiResponse,
  type ApiError,
  type PaginatedResponse,
  type BaseEvent,
  type ConceptEvent,
  type ProgressEvent,
  type Filter,
  type Sort,
  type QueryOptions,
  type ValidationResult,
  type ValidationError,
  type Brand,
  type UserId,
  type SchoolId,
  type SessionId,
  brand,
  type AsyncState,
  type CacheEntry,
  DIFFICULTY_LEVELS,
  PROGRESS_STATES,
  RELATION_STRENGTHS,
} from "./utils.js";
export { z } from "zod";
export type { ZodError, ZodIssue } from "zod";
//# sourceMappingURL=index.d.ts.map
